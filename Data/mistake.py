#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
Created on Thu Jun 01 15:36:48 2017
"""

import random
import re 

regex = [
    (r'(e)\b', ''),
    (r'(it)\b', 'i'),
    (r'\b(cent)\b', 'cents'),
    (r'\b(mon)\b', 'mes'),
    (r'\b(mon)\b', 'ma'),
    (r'\b(ma)\b', 'mon'),
    (r'\b(ma)\b', 'mes'),
    (r'\b(mes)\b', 'mon'),
    (r'\b(mes)\b', 'ma'),
    (r'(er)\b', 'é'),
    (r'(er)\b', 'ez'),
    (r'(é)\b', 'er'),
    (r'(é)\b', 'ée'),
    (r'(é)\b', 'ez'),
    (r'(ée)\b', 'é'),
    (r'(ez)\b', 'er'),
    (r'(ez)\b', 'é'),
    (r'(s)\b', ''),
    (r'(-)', ' '),
    (r'y', 'i'),
    (r'\b(mille)\b', 'milles'),
    (r'\b(un)\b', 'une'),
    (r'\b(une)\b', 'un'),
    (r'\b(une)\b', ''),
    (r'(nn)', 'n'),
    (r'\b(laquelle)\b', 'lequel'),
    (r'\b(laquelle)\b', 'auxquelles'),
    (r'\b(laquelle)\b', 'auquel'),
    (r'\b(laquelle)\b', 'lesquels'),
    (r'\b(lequel)\b', 'laquelle'),
    (r'\b(lequel)\b', 'auxquelles'),
    (r'\b(lequel)\b', 'auquel'),
    (r'\b(auxquelles)\b', 'lesquels'),
    (r'\b(auxquelles)\b', 'laquelle'),
    (r'\b(auxquelles)\b', 'auquel'),
    (r'\b(auxquelles)\b', 'lequel'),
    (r'\b(auquel)\b', 'lequel'),
    (r'\b(auquel)\b', 'laquelle'),
    (r'\b(auquel)\b', 'auxquelles'),
    (r'\b(auquel)\b', 'lesquels'),
    (r'\b(lesquels)\b', 'auquel'),
    (r'\b(lesquels)\b', 'laquelle'),
    (r'\b(lesquels)\b', 'auxquelles'),
    (r'\b(lesquels)\b', 'lesquels'),
    (r'\b(à)\b', 'a'),
    (r'\b(à)\b', ''),
    (r'\b(a)\b', 'à'),
    (r'\b(a)\b', 'as'),
    (r'\b(a)\b', 'at'),
    (r'\b(a)\b', ''),
    (r'(ll)', 'l'),
    (r'(tt)', 't'),
    (r'(é)', 'e'),
    (r'(é)', 'è'),
    (r'(è)', 'é'),
    (r'(è)', 'e'),
    (r'\b(ils)\b', 'il'),
    (r'\b(ils)\b', 'elles'),
    (r'\b(elles)\b', 'elle'),
    (r'\b(elles)\b', 'ils'),
    (r'\b(il)\b', 'ils'),
    (r'\b(la)\b', 'là'),
    (r'\b(là)\b', 'la'),
    (r'\b(qu)\b', 'c'),
    (r'ê', 'e'),
    (r'\b(ton)\b', 'ta'),
    (r'\b(ton)\b', 'tes'),
    (r'\b(ta)\b', 'ton'),
    (r'\b(ta)\b', 'tes'),
    (r'\b(tes)\b', 'ton'),
    (r'\b(tes)\b', 'ta'),
    (r'\b(parce que)\b', 'parceque'),
    (r'\b(parce que)\b', 'parce'),
    (r'\b(au)\b', 'à le'),
    (r'(eu)\b', 'eux'),
    (r'(eux)\b', 'eu'),
    (r'(eux)\b', 'eus'),
    (r'\b(ont)\b', 'on'),
    (r'\b(on)\b', 'ont'),
    (r'(ent)\b', 'e'),
    (r'(ô)', 'o'),
    (r'(ù)', 'u'),
    (r'(û)', 'u'),
    (r'\b(ca)\b', 'sa'),
    (r'\b(ça)\b', 'ca'),
    (r'\b(sa)\b', 'ça'),
    (r'\b(quel)\b', 'quels'),
    (r'\b(quel)\b', 'quelle'),
    (r'\b(quel)\b', 'quelles'),
    (r'\b(quels)\b', 'quel'),
    (r'\b(quels)\b', 'quelle'),
    (r'\b(quels)\b', 'quelles'),
    (r'\b(quelle)\b', 'quels'),
    (r'\b(quelle)\b', 'quelle'),
    (r'\b(quelle)\b', 'quelles'),
    (r'\b(quelles)\b', 'quels'),
    (r'\b(quelles)\b', 'quelle'),
    (r'\b(quelles)\b', 'quel'),
    (r'\b(quelque)\b', 'quelques'),
    (r'\b(quelques)\b', 'quelque'),
    (r'\b(plupart)\b', 'la plus part'),
    (r'\b(demi)\b', 'demie'),
    (r'\b(nul)\b', 'nulle'),
    (r'\b(tout)\b', 'toutes'),
    (r'\b(tout)\b', 'toute'),
    (r'\b(tout)\b', 'tous'),
    (r'\b(toutes)\b', 'tout'),
    (r'\b(toutes)\b', 'toute'),
    (r'\b(toutes)\b', 'tous'),
    (r'\b(toute)\b', 'toutes'),
    (r'\b(toute)\b', 'tout'),
    (r'\b(toute)\b', 'tous'),
    (r'\b(tous)\b', 'toutes'),
    (r'\b(tous)\b', 'toute'),
    (r'\b(tous)\b', 'tout'),
    (r'\b(le)\b', 'la'),
    (r'\b(la)\b', 'le'),
    (r'\b(un)\b', 'une'),
    (r'\b(une)\b', 'un'),
    (r'\b(leur)\b', 'leurs'),
    (r'\b(leurs)\b', 'leur'),
    (r'\b(son)\b', 'sa'),
    (r'\b(son)\b', 'ses'),
    (r'\b(sa)\b', 'son'),
    (r'\b(sa)\b', 'ses'),
    (r'\b(ses)\b', 'sa'),
    (r'\b(ses)\b', 'son'),
    (r'\b(ses)\b', 'ces'),
    (r'\b(ses)\b', 's\'est'),
    (r'\b(ces)\b', 'c\'est'),
    (r'\b(ces)\b', 'ces'),
    (r'\b(c\'est)\b', 'ces'),
    (r'\b(s\'est)\b', 'ses'),
    (r'\b(de)\b', 'du'),
    (r'\b(de)\b', 'du'),
    (r'(mm)', 'm'),
    (r'(pp)', 'p'),
    (r'(en)', 'an'),
    (r'(th)', 't'),
    (r'(rr)', 'r'),
    (r'(ff)', 'f'),
    (r'(ph)', 'p'),
    (r'(ph)', 'f'),
    (r'(ch)', 'c'),
    (r'(ss)', 's'),
    (r'(ll)', 'l'),
    (r'\b(h)', ''),
    (r'(x)\b', ''),
    (r'(ais)\b', 'ai'),
    (r'(ait)\b', 'ai'),
    (r'(ai)\b', 'ais'),
    (r'(ai)\b', 'ait'),
    (r'(emment)\b', 'ement'),
    (r'(amment)\b', 'ament'),
    (r'(quan)', 'can'),
    (r'\b(sensé)\b', 'censé'),
    (r'\b(censé)\b', 'sensé'),
    (r'\b(dit)\b', 'dis'),
    (r'\b(dis)\b', 'dit'),
    (r'\b(hors)\b', 'or'),
    (r'\b(dans)\b', 'dan'),
    (r'(ons)\b', 'on'),
    (r'\b(un)\b', 'une'),
    (r'\b(une)\b', 'un'),
    (r'\b(le)\b', 'la'),
    (r'\b(la)\b', 'le'),
    (r'\b(les)\b', 'le'),
    (r'\b(les)\b', 'la'),
    (r'\b(qui)\b', 'que'),
    (r'\b(que)\b', 'qui'),
    (r'(s)\b', ''),
    (r'(t)\b', ''),
    (r'(d)\b', ''),
    (r'(ds)\b', 'ts'),
    (r'\b(de)\b', 'du'),
    (r'(m\')', 'me '),
    (r'(l\')', 'le '),
    (r'(d\')', 'de '),
    (r'\b(vent)\b', 'vends'),
    (r'(vends)\b', 'vent'),
    (r'(vends)\b', 'vens'),
    (r'\b(toit)\b', 'toi'),
    (r'\b(respect)\b', 'respet'),
    (r'(pense)', 'pence'),
    (r'(en)', 'an'),
    (r'\b(fais)\b', 'fait'),
    (r'\b(vent)\b', 'vends'),
    (r'\b(plus)\b', 'pluce'),
    (r'\b(sont)\b', 'est'),
    (r'\b(veille)', 'veillie'),
    (r'\b(infatigable)\b', 'infatiguable'),
    (r'\b(pause)\b', 'pose'),
    (r'\b(davantage)\b', 'd\'avantage'),
    (r'\b(entretient)\b', 'entretien'),
    (r'\b(personnel)\b', 'personel'),
    (r'\b(auparavant)\b', 'auparavent'),
    (r'\b(qualité)\b', 'qualitée'),
    (r'\b(développement)\b', 'dévelopement'),
    (r'\b(exigeant)\b', 'exigent'),
    (r'\b(nôtre)\b', 'notre'),
    (r'\b(à l\'attention)\b', 'à l\'intention'),
    (r'\b(langage)\b', 'language'),
    (r'\b(occurrence)\b', 'occurence'),
    (r'\b(occurrence)\b', 'ocurrence'),
    (r'\b(vingts)\b', 'vingt'),
    (r'\b(temps)\b', 'tant'),
    (r'(quel que soit)', 'quelque soit'),
    (r'(quels que soient)', 'quelsque soie,t'),
    (r'(quelle que soit)', 'quelsque soit'),
    (r'(quelle que soit)', 'quelsque soit'),
    (r'(au temps pour moi)', 'autant pour moi'),
    (r'(parmi)', 'parmis'),
    (r'(malgré)', 'malgrés'),
    (r'(omettre)', 'ommettre'),
    (r'(commettre)', 'comettre'),
    (r'\b(ai)\b', 'ais'),
    (r'\b(as)\b', 'a'),
    (r'\b(a)\b', 'at'),
    (r'\b(avez)\b', 'avons'),
    (r'\b(avons)\b', 'avez'),
    (r'\b(eu)\b', 'eut'),
    (r'\b(avais)\b', 'avait'),
    (r'\b(avions)\b', 'avons'),
    (r'\b(aviez)\b', 'avez'),
    (r'\b(avaient)\b', 'avait'),
    (r'\b(aurons)\b', 'aurez'),
    (r'\b(eus)\b', 'eu'),
    (r'\b(eut)\b', 'eu'),
    (r'\b(aie)\b', 'ai'),
    (r'\b(aies)\b', 'ais'),
    (r'\b(aurais)\b', 'avais'),
    (r'\b(aurait)\b', 'aurais'),
    (r'\b(ayant)\b', 'aiant'),
    (r'\b(suis)\b', 'être'),
    (r'\b(es)\b', 'est'),
    (r'\b(est)\b', 'es'),
    (r'\b(sommes)\b', 'êtes'),
    (r'\b(êtes)\b', 'soyez'),
    (r'\b(été)\b', 'étés'),
    (r'\b(étais)\b', 'était'),
    (r'\b(était)\b', 'étais'),
    (r'\b(étions)\b', 'étons'),
    (r'\b(étiez)\b', 'été'),
    (r'\b(serai)\b', 'serais'),
    (r'\b(seras)\b', 'sera'),
    (r'\b(sera)\b', 'serat'),
    (r'\b(serons)\b', 'serions'),
    (r'\b(sois)\b', 'soit'),
    (r'\b(soit)\b', 'sois'),
    (r'\b(serait)\b', 'serais'),
    (r'\b(fais)\b', 'fait'),
    (r'\b(fait)\b', 'fais'),
    (r'\b(faisons)\b', 'fesons'),
    (r'\b(faites)\b', 'fesez'),
    (r'\b(faisais)\b', 'faisait'),
    (r'\b(faisait)\b', 'faisait'),
    (r'\b(ferai)\b', 'ferais'),
    (r'\b(feras)\b', 'fera'),
    (r'\b(feras)\b', 'fera'),
    (r'\b(feront)\b', 'ferront'),
    (r'\b(fasse)\b', 'façe'),
    (r'\b(ferais)\b', 'ferai'),
    (r'\b(ferait)\b', 'ferai'),
    (r'\b(faisant)\b', 'faizant'),
    (r'\b(peux)\b', 'peus'),
    (r'\b(peux)\b', 'peu'),
    (r'\b(peu)\b', 'peux'),
    (r'\b(peut)\b', 'peu'),
    (r'\b(pu)\b', 'pus'),
    (r'\b(pouvais)\b', 'pourrais'),
    (r'\b(pouvait)\b', 'pouvais'),
    (r'\b(pouvait)\b', 'pourrait'),
    (r'\b(pus)\b', 'pu'),
    (r'\b(pus)\b', 'put'),
    (r'\b(pourrai)\b', 'pourrais'),
    (r'\b(pourrai)\b', 'pouvais'),
    (r'\b(pourr)', 'pouv'),
    (r'(mets)\b', 'met'),
    (r'(mets)\b', 'mes'),
    (r'(mis)\b', 'mi'),
    (r'(mets)\b', 'mes'),
    (r'(mettais)\b', 'metais'),
    (r'(mis)\b', 'mit'),
    (r'(mit)\b', 'mis'),
    (r'(mettais)\b', 'metais'),
    (r'(mettais)\b', 'metrais'),
    (r'(mettais)\b', 'metait'),
    (r'(mettrai)\b', 'mettrais'),
    (r'(mette)\b', 'mète'),
    (r'(ette)', 'ete'),
    (r'ette', 'ète'),
    (r'(mettrais)\b', 'mettais'),
    (r'(mettant)\b', 'metant'),
    (r'(envoie)\b', 'envois'),
    (r'(envoies)\b', 'envois'),
    (r'(envoyé)\b', 'envoié'),
    (r'(envoyais)\b', 'envoyai'),
    (r'(envoyé)\b', 'envoié')
]

class Mistake(object):
    """
    Give it a sentence, it will mess it up and return lots of sentence with mistakes in them
    """

    def __init__(self):
        self.methods = [[pat, rep, 0] for pat, rep in regex]
        self.num_methods = len(regex)
        self.pointers = [i for i in range(len(regex))]
        self.total_mistakes = 1.0

    def gen_mistake(self, sentence):
        """
        Returns a sentence with a mistake
        """
        counter = 0
        num_mistakes = len(sentence) // 15
        is_done = False
        for i in range(self.num_methods):
            pointer = random.choice(self.pointers)
            pattern = self.methods[pointer][0]
            if re.search(pattern, sentence):
                choice = random.randint(0,100)
                threshold = (1 - (self.methods[pointer][2] / self.total_mistakes)**0.25)*100
                print('choice of {choice} with a threshold of {threshold}'.format(choice=choice, threshold=threshold))
                if choice <= threshold:
                    counter += 1
                    replace = self.methods[pointer][1]
                    sentence = re.sub(pattern, replace, sentence, count=1)
                    self.methods[pointer][2] = self.methods[pointer][2] + 1
                    self.total_mistakes += 1
            if counter >= num_mistakes:
                is_done = True
                break
        if not is_done:
            position = random.randint(2,len(sentence)-2)
            sent1 = sentence[:position-1]
            sent2 = sentence[position:]
            sent3 = sentence[position-1]
            sent4 = sentence[position]
            sentence = sent1 + sent4 + sent3 + sent2
        return sentence


if __name__ == '__main__':
    mistake = Mistake()
    #print(mistake.methods)
    #mistakes = mistake.generate_mistakes(u'L\'entreprise est initialement une société de commerce de gros et de détail, principalement de tissus mais également de produits de quincaillerie3. Le développement du jean transformera radicalement la compagnie.')
    #for m in mistakes:
    #    print(m.encode('utf-8'))
    for i in range(1000):
        print('new')
        mistakes = mistake.gen_mistake(u'L\'entreprise est initialement ta une société de commerce de gros et de détail, principalement de tissus mais également de produits de quincaillerie. Le développement du jean transformera radicalement la compagnie.')
    print(mistakes)